:host-context(.item) {
  /**
   * @prop --color: Color of the label
   */
  --color: initial;
  display: block;
  color: var(--color);
  font-family: var(--ion-font-family, inherit);
  font-size: inherit;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

:host(.ion-color) {
  color: var(--ion-color-base);
}

:host(.ion-text-wrap),
:host([text-wrap]) {
  white-space: normal;
}

:host-context(.item-interactive-disabled:not(.item-multiple-inputs)) {
  cursor: default;
  opacity: 0.3;
  pointer-events: none;
}

:host-context(.item-input) {
  -ms-flex: initial;
  flex: initial;
  max-width: 200px;
  pointer-events: none;
}

:host-context(.item-textarea) {
  -ms-flex-item-align: baseline;
  align-self: baseline;
}

:host(.label-fixed) {
  -ms-flex: 0 0 100px;
  flex: 0 0 100px;
  width: 100px;
  min-width: 100px;
  max-width: 200px;
}

:host(.label-stacked),
:host(.label-floating) {
  margin-bottom: 0;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: auto;
  max-width: 100%;
}
:host(.label-no-animate.label-floating) {
  -webkit-transition: none;
  transition: none;
}

:host(.ion-text-wrap),
:host([text-wrap]) {
  line-height: 1.5;
}

:host(.label-stacked) {
  -webkit-transform-origin: left top;
  transform-origin: left top;
  -webkit-transform: translate3d(0,  50%,  0) scale(0.75);
  transform: translate3d(0,  50%,  0) scale(0.75);
  -webkit-transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1);
}
:host-context([dir=rtl]):host(.label-stacked), :host-context([dir=rtl]).label-stacked {
  -webkit-transform-origin: right top;
  transform-origin: right top;
}

:host(.label-floating) {
  -webkit-transform: translate3d(0,  96%,  0);
  transform: translate3d(0,  96%,  0);
  -webkit-transform-origin: left top;
  transform-origin: left top;
  -webkit-transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);
}
:host-context([dir=rtl]):host(.label-floating), :host-context([dir=rtl]).label-floating {
  -webkit-transform-origin: right top;
  transform-origin: right top;
}

:host(.label-stacked),
:host(.label-floating) {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
}

:host-context(.item-select).label-floating {
  -webkit-transform: translate3d(0,  130%,  0);
  transform: translate3d(0,  130%,  0);
}

:host-context(.item-has-focus).label-floating,
:host-context(.item-has-placeholder).label-floating,
:host-context(.item-has-value).label-floating {
  -webkit-transform: translate3d(0,  50%,  0) scale(0.75);
  transform: translate3d(0,  50%,  0) scale(0.75);
}

:host-context(.item-has-focus).label-stacked,
:host-context(.item-has-focus).label-floating {
  color: var(--ion-color-primary, #3880ff);
}

::slotted(*) h1 {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 2px;
  font-size: 24px;
  font-weight: normal;
}

::slotted(*) h2 {
  margin-left: 0;
  margin-right: 0;
  margin-top: 2px;
  margin-bottom: 2px;
  font-size: 16px;
  font-weight: normal;
}

::slotted(*) h3,
::slotted(*) h4,
::slotted(*) h5,
::slotted(*) h6 {
  margin-left: 0;
  margin-right: 0;
  margin-top: 2px;
  margin-bottom: 2px;
  font-size: 14px;
  font-weight: normal;
  line-height: normal;
}

::slotted(*) p {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 2px;
  font-size: 14px;
  line-height: 20px;
  text-overflow: inherit;
  overflow: inherit;
}

::slotted(p) {
  color: var(--ion-color-step-600, #666666);
}

:host-context(.ion-color)::slotted(p) {
  color: inherit;
}