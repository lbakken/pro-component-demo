import { createEvent as __stencil_createEvent } from "@stencil/core";
import { getConnect as __stencil_getConnect } from "@stencil/core";
import { getContext as __stencil_getContext } from "@stencil/core";
import { getElement as __stencil_getElement } from "@stencil/core";
import { Host as __stencil_Host } from "@stencil/core";
import { h as __stencil_h } from "@stencil/core";
import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h, Host } from '@stencil/core';
import { checkForBadWeatherByCity, checkForBadWeatherByBrowser } from '../../helpers/utils';
export class AppHome {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.weather = '';
        this.openQuestionModal = () => {
            this.progQuestion.present();
        };
        this.openQuoteModal = () => {
            this.weather != 'none' ? this.generalRedirect.present() : this.quoteModal.present();
        };
        this.openClaimModal = () => {
            this.claimModal.present();
        };
    }
    componentDidLoad() {
        let modals = this.el.querySelectorAll('pro-modal');
        this.claimModal = modals.item(0);
        this.quoteModal = modals.item(1);
        this.thanksModal = modals.item(2);
        this.oopsModal = modals.item(3);
        this.generalRedirect = modals.item(4);
        this.progQuestion = modals.item(5);
        this.header = document.querySelector('h1');
    }
    makeAPIcall() {
        if (this.weather == '') {
            if (this.city != null) {
                checkForBadWeatherByCity(this.city).then((value) => {
                    this.weather = value;
                }).catch((er) => {
                    console.warn(er);
                    this.oopsModal.present();
                });
            }
            else {
                checkForBadWeatherByBrowser().then((value) => {
                    this.weather = value;
                }).catch(er => {
                    console.warn(er);
                    this.oopsModal.present();
                });
            }
        }
    }
    reset() {
        window.location.reload();
    }
    onCloseClaim() {
        this.claimModal.dismiss();
        this.thanksModal.present();
    }
    onCloseQuote() {
        this.quoteModal.dismiss();
        this.thanksModal.present();
    }
    onCloseThanks() {
        this.thanksModal.dismiss();
        this.reset();
    }
    onCloseOops() {
        this.oopsModal.dismiss();
        this.reset();
    }
    onChangeWeather(event) {
        this.weather = event.detail.weather;
        this.header.style.color = 'rgba(38, 58, 60, 1)';
    }
    onIsCustomer(event) {
        this.isCustomer = event.detail.response;
        if (this.weather == 'none') {
            this.quoteModal.present();
        }
        else if (this.weather) {
            this.isCustomer ? this.claimModal.present() : this.generalRedirect.present();
        }
    }
    onLocationChange(ev) {
        ev.detail ? this.city = ev.detail.city.value : this.city = null;
        this.makeAPIcall();
    }
    onWeatherButtonClick() {
        if (this.isCustomer == null) {
            this.openQuestionModal();
        }
        else {
            if (this.weather == 'none') {
                this.quoteModal.present();
            }
            else if (this.weather) {
                this.isCustomer ? this.claimModal.present() : this.generalRedirect.present();
            }
        }
    }
    changeWeatherBackground(event) {
        if (event.detail == 'none') {
            this.header.style.color = 'rgba(252, 213, 129, 1)';
        }
        else {
            this.header.style.color = 'rgba(38, 58, 60, 1)';
        }
    }
    render() {
        return (h(Host, null, h("pro-header", { onClick: () => this.reset() }, h("ion-toolbar", null, h("h1", { id: "main-header" }, "Home"), (this.weather == '') ?
            h("div", null)
            :
                h("img", { id: "home", src: "../assets/icon/house.png" }))), h("div", null, h("pro-grid", null, (this.weather == '') ?
            h("div", null, h("pro-row", null, h("pro-col", null, h("welcome-card", null))), h("pro-row", null, h("pro-col", null, h("location-card", null))))
            :
                h("pro-row", null, h("pro-col", null, h("weather-card", { history: this.weather }))), h("pro-row", null, h("pro-col", null, h("default-links", null))))), h("ion-footer", null, h("ion-toolbar", null, "\u00A0 Powered By ", h("a", { href: "https://darksky.net/dev" }, "Dark Sky API"))), h("div", { class: "modal-container" }, h("claim-form", null), h("quote-form", null), h("thanks-modal", null), h("oops-modal", null), h("general-redirect", null), h("prog-cust-question", null))));
    }
    get el() { return __stencil_getElement(this); }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:app-home"; }
}
