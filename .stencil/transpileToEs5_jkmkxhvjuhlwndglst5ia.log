System.register(['./chunk-5603b3cb.system.js'], function (exports) {
    'use strict';
    var registerInstance, getIonMode, h, getElement, Host;
    return {
        setters: [function (module) {
                registerInstance = module.r;
                getIonMode = module.f;
                h = module.h;
                getElement = module.c;
                Host = module.H;
            }],
        execute: function () {
            var FabList = /** @class */ (function () {
                function FabList(hostRef) {
                    registerInstance(this, hostRef);
                    /**
                     * If `true`, the fab list will show all fab buttons in the list.
                     */
                    this.activated = false;
                    /**
                     * The side the fab list will show on relative to the main fab button.
                     */
                    this.side = 'bottom';
                }
                FabList.prototype.activatedChanged = function (activated) {
                    var fabs = Array.from(this.el.querySelectorAll('ion-fab-button'));
                    // if showing the fabs add a timeout, else show immediately
                    var timeout = activated ? 30 : 0;
                    fabs.forEach(function (fab, i) {
                        setTimeout(function () { return fab.show = activated; }, i * timeout);
                    });
                };
                FabList.prototype.hostData = function () {
                    var _a;
                    var mode = getIonMode(this);
                    return {
                        class: (_a = {},
                            _a[mode] = true,
                            _a['fab-list-active'] = this.activated,
                            _a["fab-list-side-" + this.side] = true,
                            _a)
                    };
                };
                FabList.prototype.__stencil_render = function () {
                    return h("slot", null);
                };
                Object.defineProperty(FabList.prototype, "el", {
                    get: function () { return getElement(this); },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FabList, "watchers", {
                    get: function () {
                        return {
                            "activated": ["activatedChanged"]
                        };
                    },
                    enumerable: true,
                    configurable: true
                });
                FabList.prototype.render = function () { return h(Host, this.hostData(), this.__stencil_render()); };
                Object.defineProperty(FabList, "style", {
                    get: function () { return "STYLE_TEXT_PLACEHOLDER:ion-fab-list"; },
                    enumerable: true,
                    configurable: true
                });
                return FabList;
            }());
            exports('ion_fab_list', FabList);
        }
    };
});
